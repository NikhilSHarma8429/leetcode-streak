// 876. Middle of the Linked List
// C++


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        int i=1,j,n;
        vector<int>A;
        struct ListNode* ptr;
        ptr=head;
        while(ptr!=NULL)
        {
            A.push_back(ptr->val);
            ptr=ptr->nex57t;
        }
        n=(A.size()/2)+1;
        ptr=head;
        while(i<n)
        {
            ptr=ptr->next;
            i++;
        }
        return ptr;
        }
};

https://leetcode.com/problems/middle-of-the-linked-list/
